import httpStatusVue from '@/views/error/http-status.vue';
import { createI18n } from 'vue-i18n';

const messages = {
  zh: {
    noData: 'No data',
    top: {
      logout: '退出',
      language: '语言设置',
      LogoutSuccessful: '退出成功',
    },
    bottom: {
      project: '木兰社区孵化项目',
      about: '关于建木',
      manual: '使用手册',
      contact: '联系我们',
    },
    dialog: {
      needLoginTip: '未登录状态下，操作内容将会丢失',
    },
    allProject: {
      projectList: '项目列表',
      inputPlaceholder: '请输入项目名称',
      empty: '暂无项目',
      default: '默认排序',
      lastExecute: '最近触发',
      lastModify: '最近修改',
    },
    searchProject: {
      selectGroup: '请选择项目组',
      inputName: '请输入项目名称',
    },
    network: {
      title: '你的设备没有接入互联网',
      desc: '无法显示此页面，因为你的电脑目前已离线',
      backHome: '返回首页',
    },
    browserVersion: {
      unsupported: '抱歉，不支持此浏览器',
      backHome: '返回首页',
    },
    httpStatus: {
      backHome: '返回首页',
      noPermission: '没有权限访问该页面',
      pageNotFound: '找不到页面',
      serverError: '服务器出错',
    },
    nodeLibrary: {
      addLocalNode: '新增本地节点',
      name: '名称',
      inputName: '请输入名称',
      description: '描述',
      inputDescription: '请输入描述',
      note: '注意事项：ref为xxx/xxx或xxx时，统一处理成local/xxx，在流程或管道dsl中以local/xxx:xxx方式引用。',
      cancel: '取消',
      confirm: '确定',
      close: '关闭',
      nodeLibraryTitle: '建木节点库',
      nodeLibraryCount: '（共有 { count } 个节点定义）',
      tooltipDeprecated:
        '由于某些原因，该节点不被推荐使用（如该节点可<br/>能会导致一些已知问题或有更好的节点可替代它）',
      sync: '同步',
      delete: '删除',
      nameRequired: '名称不能为空',
      dslRequired: 'DSL不能为空',
      createSuccess: '新增成功',
      deleteNodeTitle: '删除节点',
      deleteConfirm: '确定要删除节点吗?',
      deleteSuccess: '删除成功',
      syncTitle: '同步DSL',
      syncConfirm: '确定要同步吗?',
      syncSuccess: '同步成功',
    },
    editor: {
      cancel: '取消',
      previousStep: '上一步',
      saveAndBack: '保存并返回',
      save: '保存',
      selectProjectGroup: '选择项目组',
      pleaseSelectProjectGroup: '请选择项目组',
      dslMode: 'DSL模式',
      validationProjectGroup: '请选择项目组',
      dslEmptyError: 'DSL不能为空',
      saveSuccess: '保存成功',
      createSuccess: '新增成功',
    },
    importStepOne: {
      cancel: '取消',
      next: '下一步',
      subgroups: '分组',
      selectGroup: '请选择项目组',
      enterUrl: '请输入URL，例如：https://gitee.com/jianmu-dev/jianmu.git',
      branch: '分支',
      enterBranch: '请输入分支',
      auth: '认证:',
      type: '类型',
      selectType: '请选择类型',
      username: '用户名',
      selectUsername: '请选择用户名',
      password: '密码',
      selectPassword: '请选择密码',
      selectUsernameAgain: '请选择用户名',
      privateKey: '私钥',
      selectPrivateKey: '请选择私钥',
      uriRequired: 'URI不能为空',
      groupRequired: '项目分组不能为空',
      branchRequired: '分支不能为空',
      mustSelectType: '请选择类型',
      mustSelectUsername: '请选择用户名',
      mustSelectPassword: '请选择密码',
    },
    importStepTwo: {
      cancel: '取消',
      previous: '上一步',
      save: '保存',
      selectDsl: '请选择DSL文件',
      importSuccess: '导入成功',
    },
    importer: {
      cloneGitRepo: '克隆Git仓库',
      selectDSL: '选择DSL文件',
    },
    pipelineEditor: {
      unnamedProject: '未命名项目',
      createSuccess: '新增成功',
      saveSuccess: '保存成功',
    },
    projectGroupManager: {
      close: '关闭',
      newGroup: '新建分组',
      projectGroup: '项目分组',
      totalGroups: '（共有 { total } 个组）',
      closeSorting: '关闭排序',
      sorting: '排序',
      none: '无',
      lastModified: '最后修改时间：',
      total: '共',
      items: '条项目',
      homeShow: '首页展示',
      confirmDeleteGroup: '确定要删除分组吗?',
      name: '名称：',
      deleteGroup: '删除分组',
      confirm: '确定',
      cancel: '取消',
      deleteSuccess: '项目分组删除成功',
    },
    projectGroupEditor: {
      title: '编辑项目分组',
      name: '分组名称',
      namePlaceholder: '请输入分组名称',
      isShow: '首页展示',
      description: '描述',
      descriptionPlaceholder: '请输入描述',
      descriptionTips: '描述信息不超过 256个字符',
      cancel: '取消',
      save: '保存',
      nameRequired: '分组名称不能为空',
      success: '项目分组修改成功',
    },
    projectGroupDetail: {
      close: '关闭',
      totalProjects: '（共有 { count } 个项目）',
      none: '无',
      addProject: '添加项目',
      projectList: '项目列表',
      closeSorting: '关闭排序',
      sorting: '排序',
    },
    projectGroupCreator: {
      title: '新建项目分组',
      name: '分组名称',
      namePlaceholder: '请输入分组名称',
      isShow: '首页展示',
      description: '描述',
      descriptionPlaceholder: '请输入描述',
      descriptionTips: '描述信息不超过 256个字符',
      cancel: '取消',
      confirm: '确定',
      nameRequired: '分组名称不能为空',
      success: '项目分组创建成功',
    },
    projectAdder: {
      title: '添加项目',
      selectGroup: '选择项目组',
      selectGroupPlaceholder: '请选择项目组',
      selectedProject: '已选项目',
      inputPlaceholder: '请输入项目名称或描述',
      none: '无',
      cancel: '取消',
      confirm: '确定',
      selectGroupRequired: '请选择项目组',
      addProjectRequired: '请添加项目',
      success: '项目添加成功',
    },
    skManager: {
      close: '关闭',
      title: '密钥列表',
      total: '（共有 { keys } 个密钥）',
      add: '新增密钥',
      none: '无',
      confirmDelete: '确定要删除密钥吗?',
      name: '名称：',
      delete: '删除密钥',
      confirm: '确定',
      cancel: '取消',
      success: '删除成功',
    },
    skEditor: {
      title: '新增密钥',
      name: '名称',
      namePlaceholder: '请输入名称',
      value: '值',
      valuePlaceholder: '请输入值',
      cancel: '取消',
      confirm: '确定',
      nameRequired: '名称不能为空',
      valueRequired: '值不能为空',
      success: '新增成功',
    },
    nsManager: {
      close: '关闭',
      add: '新增命名空间',
      title: '命名空间',
      total: '（共有 { length } 个命名空间）',
      none: '无',
      lastModified: '最后修改时间：',
      confirmDelete: '确定要删除命名空间吗?',
      nameLabel: '名称：',
      deleteTitle: '删除命名空间',
      confirm: '确定',
      cancel: '取消',
      success: '删除成功',
    },
    nsEditor: {
      title: '新增密钥命名空间',
      name: '命名空间',
      namePlaceholder: '请输入命名空间',
      description: '描述',
      descriptionPlaceholder: '请输入描述',
      cancel: '取消',
      confirm: '确定',
      nameRequired: '命名空间不能为空',
      success: '新增成功',
    },
    workersManager: {
      close: '关闭',
      title: 'Worker列表',
      total: '（共有 { length } 个Worker）',
      name: '名称：',
      label: '标签：',
      none: '无',
      os: '操作系统：',
      arch: '架构：',
      type: '类型：',
      time: '注册时间：',
      confirmDeleteMsg: '确定要删除Worker吗?',
      confirmDeleteTitle: '删除Worker',
      confirm: '确定',
      cancel: '取消',
      success: '删除成功',
    },
    detail: {
      terminateAll: '终止全部',
      trigger: '触发',
      notClickable: '暂无法点击',
      startTime: '启动时间',
      endTime: '完成时间',
      suspendedDuration: '挂起时长',
      executionDuration: '执行时长',
      none: '无',
      instanceId: '流程实例ID',
      version: '流程版本号',
      terminate: '终止',
      success: '操作成功',
      confirmTrigger: '确定要触发吗?',
      triggerExecution: '触发项目执行',
      confirm: '确定',
      cancel: '取消',
      terminatingSuccess: '操作成功，正在终止，请稍后',
      confirmTerminateAll: '确定要终止执行中/挂起的全部实例吗？',
      terminateExecution: '终止项目执行',
      confirmTerminate: '确定要终止吗?',
      terminateSuccess: '终止成功',
    },
    processLog: {
      processName: '流程名称',
      startTime: '启动时间',
      endTime: '完成时间',
      suspendedDuration: '挂起时长',
      executionDuration: '执行时长',
      instanceId: '流程实例ID',
      version: '流程版本号',
      loading: '加载中...',
    },
    taskLog: {
      processName: '流程名称',
      executionCount: '执行次数',
      nodeName: '节点名称',
      successCount: '成功次数',
      nodeDefinition: '节点定义',
      failureCount: '失败次数',
      startTime: '启动时间',
      skipCount: '跳过次数',
      executionDuration: '执行时长',
      suspendedCount: '挂起次数',
      executionStatus: '执行状态',
      ignoreCount: '忽略次数',
      log: '日志',
      loading: '加载中...',
      businessParams: '业务参数',
      inputParams: '输入参数',
      paramKey: '参数唯一标识',
      paramType: '参数类型',
      requiredOrNot: '是/否必填',
      yes: '是',
      no: '否',
      paramValue: '参数值',
      outputParams: '输出参数',
      cache: '缓存',
      mountPath: '挂载目录',
      status: '状态',
      unavailableTipLine1: '对于不可用的缓存，可到项目卡片-',
      unavailableTipLine2: '更多-缓存中清理或项目编辑页删除',
      available: '可用',
      unavailable: '不可用',
      requiredField: '必填项',
    },
    webhookLog: {
      processName: '流程名称：',
      nodeName: '节点名称：',
      startTime: '启动时间：',
      log: '日志',
      businessParams: '业务参数',
      paramKey: '参数唯一标识',
      paramType: '参数类型',
      paramValue: '参数值',
      notTriggered: '尚未触发',
      manualTriggerLog: '此次为手动触发，无webhook日志',
    },
    workflow: {
      taskLogTitle: '查看任务执行日志',
      processLogTitle: '查看流程日志',
      webhookLogTitle: '查看Webhook日志',
    },
    index: {
      graphProject: '图形项目',
      codeProject: '代码项目',
      workerManager: 'Worker管理',
      localNode: '本地节点',
      groupManager: '分组管理',
      secretKeyManager: '密钥管理',
    },
    main: {
      componentLib: '组件库',
      loginPage: '登录页',
      errorPage: '错误页：',
      browserVersion: '浏览器版本',
      network: '网络',
    },
    login: {
      welcome: '欢迎登录',
      usernamePlaceholder: '请输入用户名',
      passwordPlaceholder: '请输入密码',
      remember: '记住用户名',
      login: '登录',
      loginProblem: '登录遇到问题，请尝试重新登录',
      cancel: '取消',
      reLogin: '重新登录',
      loggingInWith: '{type} 账号登录中…',
      loginWith: '使用 {type} 账号登录',
      usernameEmpty: '用户名不能为空',
      passwordEmpty: '密码不能为空',
      success: '登录成功',
    },
    projectGroup: {
      viewMore: '查看更多',
      noProjects: '没有项目',
      noResult: '没有找到相关结果',
      totalProjects: '共有 { count } 个项目',
    },
  },

  en: {
    top: {
      logout: 'Logout',
      language: 'Language',
      LogoutSuccessful: 'Logout Successful',
    },
    bottom: {
      project: 'Mulan Incubator',
      about: 'About Jianmu',
      manual: 'Documentation',
      contact: 'Contact Us',
    },
    dialog: {
      needLoginTip: 'The contents of the operation will be lost if you are not logged in',
    },
    allProject: {
      projectList: 'Project List',
      inputPlaceholder: 'Please enter project name',
      empty: 'No Projects',
      default: 'Default Sort',
      lastExecute: 'Recently triggered',
      lastModify: 'Recent changes',
    },
    searchProject: {
      selectGroup: 'Please select a project group',
      inputName: 'Please enter project name',
    },
    network: {
      title: 'Your device is not connected to the internet',
      desc: 'This page cannot be displayed because your computer is currently offline',
      backHome: 'Back to Home',
    },
    browserVersion: {
      unsupported: 'Sorry, this browser is not supported',
      backHome: 'Back to Home',
    },
    httpStatus: {
      backHome: 'Back to Home',
      noPermission: 'No permission to access this page',
      pageNotFound: 'Page not found',
      serverError: 'Server Error',
    },
    nodeLibrary: {
      addLocalNode: 'Add Local Node',
      name: 'Name',
      inputName: 'Please enter name',
      description: 'Description',
      inputDescription: 'Please enter description',
      note: 'Note: When ref is xxx/xxx or xxx, it is uniformly handled as local/xxx and referenced as local/xxx:xxx in the process or pipeline dsl.',
      cancel: 'Cancel',
      confirm: 'Confirm',
      close: 'Close',
      nodeLibraryTitle: 'Jianmu Node Library',
      nodeLibraryCount: '(Total { count } node definitions)',
      tooltipDeprecated: 'This node is not recommended due to known issues or a better alternative',
      sync: 'Sync',
      delete: 'Delete',
      nameRequired: 'Name cannot be empty',
      dslRequired: 'DSL cannot be empty',
      createSuccess: 'Created successfully',
      deleteNodeTitle: 'Delete Node',
      deleteConfirm: 'Are you sure you want to delete the node?',
      deleteSuccess: 'Deleted successfully',
      syncTitle: 'Sync DSL',
      syncConfirm: 'Are you sure you want to sync?',
      syncSuccess: 'Synced successfully',
    },
    editor: {
      cancel: 'Cancel',
      previousStep: 'Previous Step',
      saveAndBack: 'Save and Return',
      save: 'Save',
      selectProjectGroup: 'Select Project Group',
      pleaseSelectProjectGroup: 'Please select a project group',
      dslMode: 'DSL Mode',
      validationProjectGroup: 'Please select a project group',
      dslEmptyError: 'DSL cannot be empty',
      saveSuccess: 'Saved successfully',
      createSuccess: 'Created successfully',
    },
    importStepOne: {
      cancel: 'Cancel',
      next: 'Next',
      subgroups: 'Subgroups',
      selectGroup: 'Please select the project group',
      enterUrl: 'Please enter the URL, e.g. https://gitee.com/jianmu-dev/jianmu.git',
      branch: 'Branch',
      enterBranch: 'Please enter the branch',
      auth: 'Authentication:',
      type: 'Type',
      selectType: 'Please select the type',
      username: 'Username',
      selectUsername: 'Please select the username',
      password: 'Password',
      selectPassword: 'Please select the password',
      selectUsernameAgain: 'Please select the username',
      privateKey: 'Private Key',
      selectPrivateKey: 'Please select the private key',
      uriRequired: 'URI can\'t be null',
      groupRequired: 'Project grouping can\'t be null',
      branchRequired: 'Branching can\'t be null',
      mustSelectType: 'Please Select type',
      mustSelectUsername: 'Please select username',
      mustSelectPassword: 'Please select password',
    },
    importStepTwo: {
      cancel: 'Cancel',
      previous: 'Previous Step',
      save: 'Save',
      selectDsl: 'Please select DSL file',
      importSuccess: 'Import Successful',
    },
    importer: {
      cloneGitRepo: 'Clone Git Repository',
      selectDSL: 'Select DSL File',
    },
    pipelineEditor: {
      unnamedProject: 'Untitled Project',
      createSuccess: 'Created successfully',
      saveSuccess: 'Saved successfully',
    },
    projectGroupManager: {
      close: 'Close',
      newGroup: 'New Group',
      projectGroup: 'Project Group',
      totalGroups: '(Total { total } groups)',
      closeSorting: 'Close Sorting',
      sorting: 'Sorting',
      none: 'None',
      lastModified: 'Last Modified:  ',
      total: 'Total ',
      items: ' items',
      homeShow: 'Home Show',
      confirmDeleteGroup: 'Sure you want to delete the group?',
      name: 'Name:  ',
      deleteGroup: 'Delete Group',
      confirm: 'Confirm',
      cancel: 'Cancel',
      deleteSuccess: 'Project Group Delete Successful',
    },
    projectGroupEditor: {
      title: 'Edit project grouping',
      name: 'Grouping name',
      namePlaceholder: 'Please enter the name of the grouping',
      isShow: 'Home display',
      description: 'Description',
      descriptionPlaceholder: 'Please enter the description',
      descriptionTips: 'The description information is not more than 256 characters',
      cancel: 'Cancel',
      save: 'Save',
      nameRequired: 'The grouping name can not be empty',
      success: 'Project grouping modification successful',
    },
    projectGroupDetail: {
      close: 'Close',
      totalProjects: '（Total { count } projects）',
      none: 'None',
      addProject: 'add project',
      projectList: 'project list',
      closeSorting: 'close sorting',
      sorting: 'sorting',
    },
    projectGroupCreator: {
      title: 'New project grouping',
      name: 'Grouping name',
      namePlaceholder: 'Please enter the name of the grouping',
      isShow: 'Home display',
      description: 'Description',
      descriptionPlaceholder: 'Please enter the description',
      descriptionTips: 'The description information is not more than 256 characters',
      cancel: 'Cancel',
      confirm: 'Confirm',
      nameRequired: 'The grouping name must not be empty',
      success: 'The project grouping was created successfully',
    },
    projectAdder: {
      title: 'Add project',
      selectGroup: 'Select project group',
      selectGroupPlaceholder: 'Please select project group',
      selectedProject: 'Selected project',
      inputPlaceholder: 'Please enter project name or description',
      none: 'None',
      cancel: 'Cancel',
      confirm: 'Confirm',
      selectGroupRequired: 'Please select project group',
      addProjectRequired: 'Please add project',
      success: 'Project added successfully',
    },
    skManager: {
      close: 'Close',
      title: 'Secret Key List',
      total: '(Total { keys } Secret Keys)',
      add: 'New Secret Key',
      none: 'None',
      confirmDelete: 'Are you sure you want to delete the secret key?',
      name: 'Name:  ',
      delete: 'Delete Secret Key',
      confirm: 'Confirm',
      cancel: 'Cancel',
      success: 'Delete Successful',
    },
    skEditor: {
      title: 'Add Secret Key',
      name: 'Name',
      namePlaceholder: 'Please enter a name',
      value: 'Value',
      valuePlaceholder: 'Please enter a value',
      cancel: 'Cancel',
      confirm: 'Confirm',
      nameRequired: 'Name can\'t be empty',
      valueRequired: 'Value can\'t be empty',
      success: 'Add success',
    },
    nsManager: {
      close: 'Close',
      add: 'New Namespace',
      title: 'Namespaces',
      total: '(Total { length } namespaces)',
      none: 'None',
      lastModified: 'Last modified:  ',
      confirmDelete: 'Sure you want to delete namespace?',
      nameLabel: 'Name:  ',
      deleteTitle: 'Delete Namespace',
      confirm: 'Confirm',
      cancel: 'Cancel',
      success: 'Delete Successful',
    },
    nsEditor: {
      title: 'Add Secret Key Namespace',
      name: 'Namespace',
      namePlaceholder: 'Please enter the namespace',
      description: 'Description',
      descriptionPlaceholder: 'Please enter the description',
      cancel: 'Cancel',
      confirm: 'Confirm',
      nameRequired: 'Namespace can\'t be empty',
      success: 'New Successful',
    },
    workersManager: {
      close: 'Close',
      title: 'Worker list',
      total: '(Total { length } Workers)',
      name: 'Name:  ',
      label: 'Label:  ',
      none: 'None',
      os: 'Operating System:  ',
      arch: 'Architecture:  ',
      type: 'Type:  ',
      time: 'Registered:  ',
      confirmDeleteMsg: 'Sure you want to delete a Worker?',
      confirmDeleteTitle: 'Delete Worker',
      confirm: 'Confirm',
      cancel: 'Cancel',
      success: 'Delete Successful',
    },
    detail: {
      terminateAll: 'Terminate all',
      trigger: 'Trigger',
      notClickable: 'Not clickable at this time',
      startTime: 'Start time',
      endTime: 'Completion time',
      suspendedDuration: 'Suspended Duration',
      executionDuration: 'Execution Duration',
      none: 'None',
      instanceId: 'Process instance ID',
      version: 'Process version number',
      terminate: 'Terminate',
      success: 'Operation successful',
      confirmTrigger: 'Sure you want to trigger?',
      triggerExecution: 'Trigger Project Execution',
      confirm: 'Confirm',
      cancel: 'Cancel',
      terminatingSuccess: 'Operation Successful, terminating, please wait',
      confirmTerminateAll: 'Sure you want to terminate all instances in execution/pending?',
      terminateExecution: 'Terminate Project Execution',
      confirmTerminate: 'Sure you want to terminate?',
      terminateSuccess: 'Terminate Successful',
    },
    processLog: {
      processName: 'Process name',
      startTime: 'Start time',
      endTime: 'Completion time',
      suspendedDuration: 'Suspended Duration',
      executionDuration: 'Execution Duration',
      instanceId: 'Process instance ID',
      version: 'Process version number',
      loading: 'Loading...',
    },
    taskLog: {
      processName: 'Process Name',
      executionCount: 'Execution Count',
      nodeName: 'Node Name',
      successCount: 'Success Count',
      nodeDefinition: 'Node Definition',
      failureCount: 'Failure Count',
      startTime: 'Start Time',
      skipCount: 'Skip Count',
      executionDuration: 'Execution Duration',
      suspendedCount: 'Suspended Count',
      executionStatus: 'Execution Status',
      ignoreCount: 'Ignore Count',
      log: 'Log',
      loading: 'Loading...',
      businessParams: 'Business Parameters',
      inputParams: 'Input Parameters',
      paramKey: 'Parameter Unique Identifier',
      paramType: 'Parameter Type',
      requiredOrNot: 'Yes/No Required',
      yes: 'Yes',
      no: 'No',
      paramValue: 'Parameter Value',
      outputParams: 'Output Parameters',
      cache: 'Cache',
      mountPath: 'Mounted Directory',
      status: 'Status',
      unavailableTipLine1: 'For unavailable caches, you can go to Project Cards -',
      unavailableTipLine2: 'More - Cleanup in Cache or the Project Edit Page to delete',
      available: 'Available',
      unavailable: 'Unavailable',
      requiredField: 'Required fields',
    },
    webhookLog: {
      processName: 'Process Name:  ',
      nodeName: 'Node Name:  ',
      startTime: 'Start Time:  ',
      log: 'Log',
      businessParams: 'Business Parameters',
      paramKey: 'Parameter Unique Identifier',
      paramType: 'Parameter Type',
      paramValue: 'Parameter Value',
      notTriggered: 'Not Triggered Yet',
      manualTriggerLog: 'This time manually triggered, no webhook logs',
    },
    workflow: {
      taskLogTitle: 'View Task Execution Log',
      processLogTitle: 'View Process Log',
      webhookLogTitle: 'View Webhook Log',
    },
    index: {
      graphProject: 'Graphics Projects',
      codeProject: 'Code Projects',
      workerManager: 'Worker Management',
      localNode: 'Local Nodes',
      groupManager: 'Group Management',
      secretKeyManager: 'Secret Key Management',
    },
    main: {
      componentLib: 'Component Library',
      loginPage: 'Login Page',
      errorPage: 'Error Page:  ',
      browserVersion: 'Browser Version',
      network: 'Web',
    },
    login: {
      welcome: 'Welcome to login',
      usernamePlaceholder: 'Please enter your username',
      passwordPlaceholder: 'Please enter your password',
      remember: 'Remember username',
      login: 'Login',
      loginProblem: 'Problems logging in, please try to log in again',
      cancel: 'Cancel',
      reLogin: 'Re-login',
      loggingInWith: 'Account login in progress with {type}…',
      loginWith: 'Use {type} account to login',
      usernameEmpty: 'Username can\'t be empty',
      passwordEmpty: 'Password can\'t be empty',
      success: 'Login successful',
    },
    projectGroup: {
      viewMore: 'View More',
      noProjects: 'No Projects',
      noResult: 'No related results were found',
      totalProjects: '（Total { count } projects）',
    },
  },
};

const getDefaultLocale = () => {
  const saved = localStorage.getItem('JianmuLang');
  if (saved) return saved;

  const browserLang = navigator.language.split('-')[0];
  const supportedLangs = ['zh', 'en'];
  const lang = supportedLangs.includes(browserLang) ? browserLang : 'zh';
  localStorage.setItem('JianmuLang', lang);
  return lang;
};

const i18n = createI18n({
  locale: getDefaultLocale(),
  fallbackLocale: 'zh',
  messages,
});

export default i18n;
